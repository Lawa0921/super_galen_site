story:
  title: Adventurer's Profile
  intro1: The evolution from waste to engineer, an adventure story full of challenges and growth...
  intro2: Once a muggle who knew nothing about programming, through continuous learning and practice, now a full-stack developer who can stand alone.
  intro3: Good at transforming complex technical concepts into easy-to-understand teaching content, while loving to explore new technologies and apply them to real projects.
  timeline_start: Started the programming adventure
  timeline_first_project: Completed first commercial project
  timeline_blockchain: Joined blockchain development

story_book:
  chapters:
    chapter_0:
      title: "Prologue: Galen's Origin Story"
      events:
        event_0:
          date: 2011-2015
          title: The Wonderful Adventure in Marine Leisure Management
          description: Studied at National Kaohsiung University of Science and Technology's Marine Leisure Management Department. I researched marine ecology with classmates and played on surfboards and sailboats. I led the department cheerleading team to second place and won a dragon boat race! Who says people who manage oceans can't manage code? Well, I really couldn't back then.
        event_1:
          date: 2015-Present
          title: "Secret Travel: From Ocean Athlete to CEO to Bug Producer"
          description: Founded the camping site "Secret Travel" and learned the most important entrepreneurial skill - how to debug life on a mountain with no internet. Handled countless customer "requirement changes" (last-minute tent additions, extra people, postponements, cancellations). This experience gave me a deep understanding of what "Agile Development" really means.

    chapter_1:
      title: "Chapter 1: Hello, World!"
      events:
        event_0:
          date: "2019"
          title: "Self-Teaching Japanese to N1: The Starting Point of Self-Learning"
          description: Passed the N1 Japanese proficiency test through self-study in one year. Discovered that learning Japanese is like programming - both involve dealing with a bunch of incomprehensible symbols. Kanji are like variable names, particles are like operators. This experience proved my self-learning ability - Google is the best teacher!
        event_1:
          date: 2020.03-08
          title: "AstroCamp: From Muggle to Wizard"
          description: Joined a programming bootcamp. First time seeing Ruby, thought it was a gemstone. From "puts 'Hello World'" to building a GitHub clone with Rails (yes, we really made a knockoff GitHub). Learned that MVC is not a convenience store and CRUD is not a swear word. Debugging until dawn every day, finally understood why programmers have dark circles.

    chapter_2:
      title: "Chapter 2: The Rookie Engineer's Counterattack"
      events:
        event_0:
          date: 2020.08-2022.02
          title: "Snapask: My First Production Product"
          description: Joined an online education platform as a backend engineer, writing APIs with Ruby on Rails. Learned terms I'd never heard before like cache, backgroundjob, websocket. My PostgreSQL JOINs could make senior engineers cry. Most proud achievement - optimizing an API from 30 seconds to 3 seconds. Turned out I forgot to add an index. What's an index? I only learned that then.
        event_1:
          date: 2021.06
          title: "Independent Project: Finally Can Say 'This Bug Wasn't Mine'"
          description: First time owning a project like a real engineer! From requirement interviews (listening to PM stories), system design (drawing lots of professional-looking architecture diagrams), to implementation and deployment (fixing bugs at midnight). Learned Git Flow, CI/CD, and the most important skill - how to politely tell PM "this requirement is impossible."

    chapter_3:
      title: "Chapter 3: The Magical Journey of Web3"
      events:
        event_0:
          date: 2022.02-2022.04
          title: "KryptoCamp: From 'What is Block' to 'Blockchain'"
          description: Joined a blockchain bootcamp and finally understood that Gas isn't gasoline and smart contracts don't negotiate by themselves. Wrote my first smart contract in Solidity. Learned to use Hardhat for testing (free praise), IPFS storage (so decentralized you can't find where files are), and ethers.js integration (finally don't need to manually input private keys).
        event_1:
          date: 2022.05-2023.02
          title: "DFKRunner: Making NFTs Go to Work by Themselves"
          description: Became a blockchain freelance developer, creating DFKRunner automation scripts - making DeFi Kingdoms NFT heroes automatically mine, fish, and garden. Using Node.js + harmony-js + ethers.js, cross-chain between DFK and Klaytn. Most satisfying achievement - NFTs making me money while I sleep! Also learned an important lesson - bugs in smart contracts are much more expensive than regular bugs (literally debugging with money).

    chapter_4:
      title: "Chapter 4: The Full-Stack Engineer's Training"
      events:
        event_0:
          date: 2023.03-2024.09
          title: "Yige Apartments: Elixir's Functional Adventure"
          description: Joined a property management system company, developing with Elixir Phoenix. First time encountering functional programming, discovered that "immutable" isn't referring to my salary. Actor Model made me understand "let it crash" - turns out program crashes can be a design pattern! Using LiveView for real-time interaction, creating SPA effects without writing JavaScript (though I ended up writing lots of JS anyway). Managing AWS with Terraform + Ansible, learned IaC (Infrastructure as Code, not IC design).
        event_1:
          date: 2024.12-Present
          title: "JTCG: Rails' Phoenix Rebirth"
          description: Joined an AI tech company, returning to Ruby on Rails' embrace. Using Stimulus + Hotwire for frontend. Integrating Line API for AI chatbot, testing by talking to bots every day (sometimes more than talking to people). Maintaining core AI products, keeping server uptime <0.1% downtime - meaning my rest time is less than the server's. Current me - writing Tailwind until eye pressure spikes, Git has merged into my DNA.

    chapter_final:
      title: "Finale: To Be Continued..."
      events:
        event_0:
          date: Current Skill Tree
          title: The Full-Stack Engineer's Arsenal
          description: Frontend - HTML/CSS/JS fundamentals, jQuery, Bootstrap + Tailwind (CSS framework dual-wielding). Backend - Ruby on Rails (first love), Elixir Phoenix (functional baptism), Node.js (automation script buddy). Blockchain - Solidity (every line of code is money), Hardhat (testing saved my wallet), ethers.js (bridge between on-chain and off-chain). DevOps - Terraform/Ansible (making servers version controllable too), Git (already muscle memory).
        event_1:
          date: Next Chapter
          title: npm install future
          description: Future plans? Keep debugging life! Currently learning AI development and BMAD processes. Life motto - "Bugs are just features in disguise." Besides coding, also love sharing knowledge (teaching others to debug confirms I really know it), board games (strategy games train logical thinking), and my new hobby is chatting with AI. Welcome to my GitHub, let's adventure together in the world of code!