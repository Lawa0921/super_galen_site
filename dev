#!/bin/bash

# 顏色定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🚀 啟動本地開發環境...${NC}"
echo "=================================="

# 檢查必要的依賴
if ! command -v node &> /dev/null; then
    echo -e "${RED}❌ 錯誤: 未找到 Node.js${NC}"
    exit 1
fi

if ! command -v bundle &> /dev/null; then
    echo -e "${RED}❌ 錯誤: 未找到 Bundler${NC}"
    exit 1
fi

# 檢查是否已經有 hardhat node 在運行
if lsof -Pi :8545 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  檢測到 Hardhat 節點已在運行${NC}"
    echo -e "${GREEN}   跳過節點啟動步驟${NC}"
    NODE_ALREADY_RUNNING=true
else
    echo -e "${GREEN}📦 步驟 1: 啟動 Hardhat 本地節點...${NC}"
    npm run node > logs/hardhat-node.log 2>&1 &
    NODE_PID=$!
    echo "   節點 PID: $NODE_PID"

    # 等待節點啟動
    echo -e "${YELLOW}   等待節點啟動...${NC}"
    for i in {1..10}; do
        if lsof -Pi :8545 -sTCP:LISTEN -t >/dev/null 2>&1; then
            echo -e "${GREEN}✅ Hardhat 節點已成功啟動${NC}"
            break
        fi
        sleep 1
    done

    if ! lsof -Pi :8545 -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo -e "${RED}❌ Hardhat 節點啟動失敗${NC}"
        echo "   請檢查 logs/hardhat-node.log 查看錯誤資訊"
        exit 1
    fi
    NODE_ALREADY_RUNNING=false
fi

# 部署合約
echo ""
echo -e "${GREEN}📦 步驟 2: 部署智能合約到本地網路...${NC}"
echo -e "${YELLOW}   這會設置測試帳戶和代幣...${NC}"

# 確保 logs 目錄存在
mkdir -p logs

# 執行部署
npm run deploy:local

# 檢查部署是否成功
if [ $? -eq 0 ]; then
    echo -e "${GREEN}✅ 合約部署成功${NC}"
else
    echo -e "${RED}❌ 合約部署失敗${NC}"
    if [ "$NODE_ALREADY_RUNNING" = false ] && [ ! -z "$NODE_PID" ]; then
        kill $NODE_PID 2>/dev/null
    fi
    exit 1
fi

# 檢查是否已經有 Jekyll 在運行
if lsof -Pi :4000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo ""
    echo -e "${YELLOW}⚠️  檢測到 Jekyll 已在運行${NC}"
    echo -e "${GREEN}   網站已經在 http://localhost:4000 提供服務${NC}"
    JEKYLL_ALREADY_RUNNING=true
else
    echo ""
    echo -e "${GREEN}📦 步驟 3: 啟動 Jekyll 開發服務器...${NC}"
    bundle exec jekyll serve --host 0.0.0.0 > logs/jekyll.log 2>&1 &
    JEKYLL_PID=$!
    echo "   Jekyll PID: $JEKYLL_PID"

    # 等待 Jekyll 啟動
    echo -e "${YELLOW}   等待 Jekyll 啟動...${NC}"
    for i in {1..15}; do
        if lsof -Pi :4000 -sTCP:LISTEN -t >/dev/null 2>&1; then
            echo -e "${GREEN}✅ Jekyll 已成功啟動${NC}"
            break
        fi
        sleep 1
    done

    if ! lsof -Pi :4000 -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo -e "${YELLOW}⚠️  Jekyll 可能還在啟動中...${NC}"
        echo "   請檢查 logs/jekyll.log 查看狀態"
    fi
    JEKYLL_ALREADY_RUNNING=false
fi

# 顯示總結
echo ""
echo "=================================="
echo -e "${GREEN}🎉 開發環境設置完成！${NC}"
echo "=================================="
echo ""
echo -e "${BLUE}📋 環境資訊：${NC}"
echo "   • Hardhat 節點: http://localhost:8545"
echo "   • 網站地址: http://localhost:4000"
echo "   • 日誌檔案: logs/ 目錄"
echo ""
echo -e "${BLUE}💰 主要測試帳戶 (Hardhat #0):${NC}"
echo "   • 地址: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
echo "   • 私鑰: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
echo "   • 餘額: 100,000 USDT + ~9,900 ETH"
echo ""
echo -e "${BLUE}📄 已部署合約:${NC}"

# 讀取部署地址
if [ -f "blockchain/deployments/deployed_addresses.json" ]; then
    SGT_ADDR=$(grep -o '"SGT": "[^"]*"' blockchain/deployments/deployed_addresses.json | head -1 | cut -d'"' -f4)
    USDT_ADDR=$(grep -o '"MockUSDT": "[^"]*"' blockchain/deployments/deployed_addresses.json | head -1 | cut -d'"' -f4)
    echo "   • SGT 代幣: $SGT_ADDR"
    echo "   • Mock USDT: $USDT_ADDR"
fi

echo ""
echo -e "${YELLOW}💡 使用提示:${NC}"
echo "   • 使用 Ctrl+C 關閉本腳本啟動的服務"
echo "   • Jekyll 會自動監控檔案變更並重新生成"
echo "   • 在 MetaMask 中連接到 Localhost 8545"
echo "   • 可直接導入上述測試帳戶私鑰進行測試"
echo "   • 查看日誌: tail -f logs/*.log"
echo ""
echo -e "${GREEN}🚀 開始開發吧！${NC}"
echo ""

# 設置清理函數
cleanup() {
    echo ""
    echo -e "${YELLOW}🛑 正在關閉服務...${NC}"

    # 只關閉本腳本啟動的服務
    if [ "$JEKYLL_ALREADY_RUNNING" = false ] && [ ! -z "$JEKYLL_PID" ]; then
        kill $JEKYLL_PID 2>/dev/null
        echo -e "${GREEN}✅ Jekyll 已關閉${NC}"
    fi

    if [ "$NODE_ALREADY_RUNNING" = false ] && [ ! -z "$NODE_PID" ]; then
        kill $NODE_PID 2>/dev/null
        echo -e "${GREEN}✅ Hardhat 節點已關閉${NC}"
    fi

    echo -e "${GREEN}👋 開發環境已清理完畢${NC}"
    exit 0
}

# 捕捉 Ctrl+C
trap cleanup INT

# 如果兩個服務都已經在運行，不需要等待
if [ "$NODE_ALREADY_RUNNING" = true ] && [ "$JEKYLL_ALREADY_RUNNING" = true ]; then
    echo -e "${YELLOW}💡 所有服務都已在運行中${NC}"
    echo "   如需重新部署合約，請執行: npm run deploy:local"
    echo "   如需重啟服務，請先手動關閉現有服務"
    exit 0
fi

# 保持腳本運行
echo "按 Ctrl+C 停止服務..."
wait